server {

    listen      80;

    server_name www.<HTTP_HOSTNAME>  <HTTP_HOSTNAME>  ;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root         <BASEPATH>/runtime/letsencrypt;
    }

    location = /.well-known/acme-challenge/ {
        return      404;
    }

    location / {
        if ($host ~* ^(ru|en)\.<HTTP_HOSTNAME>$) {
            return      301 http://<HTTP_HOSTNAME>$request_uri;
        }

        return 301 https://$host$request_uri;
    }
}

server {

    listen      443 http2;

    server_name www.<HTTP_HOSTNAME>  <HTTP_HOSTNAME>  ;

    if ($host ~* ^(ru|en)\.<HTTP_HOSTNAME>$) {
        return      301 https://<HTTP_HOSTNAME>$request_uri;
    }

    if ($host ~* ^www\.(.+)$) {
        return      301 https://$1$request_uri;
    }

    ssl                 on;

    ssl_certificate     <CERT_FILE>;
    ssl_certificate_key <CERT_KEY_FILE>;

    ssl_session_timeout 10m;
    ssl_session_cache   shared:SSL:10m;

    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    add_header Strict-Transport-Security "max-age=31536000";

    root <BASEPATH>/services/proxy/errors.d/;
    error_page 502 /502.html;
    error_page 503 /503.html;

    location / {
        if (-f <BASEPATH>/services/proxy/maintenance.lock) {
            return 503;
        }

        try_files $uri @backend;
    }

    location ~ ^/(sockjs-node) {
        proxy_pass         http://<PUBLIC_IP>:<HTTP_PORT>;
        proxy_http_version 1.1;
        proxy_set_header   Host      $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
    }

    location ~ ^/(stream) {
        proxy_pass         http://<PUBLIC_IP>:<STREAM_PORT>;
        proxy_http_version 1.1;
        proxy_set_header   Host      $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
    }

    location @backend {
        proxy_pass         http://<PUBLIC_IP>:<HTTP_PORT>;
        proxy_set_header   Host      $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_http_version 1.1;
    }

    location ~ ^/50[0-9]\.html$ {
        internal;
    }
}
